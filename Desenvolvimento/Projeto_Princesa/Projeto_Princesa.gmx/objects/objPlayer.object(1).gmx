<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>srpPlayerIdle</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Variables
grav = 0.2;
hsp = 0;
vsp = 0;
jumpspeed = 7;
movespeed = 4;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//verifica botões pressionados
key_right = keyboard_check(vk_right);
key_left = -keyboard_check(vk_left);
key_jump = keyboard_check_pressed(vk_space);

move = key_left + key_right;
hsp = move * movespeed;
if (vsp &lt; 10) vsp += grav;
 
//Verifica se personagem está em cima de algum objeto
canJump = false;
if (place_meeting(x, y+1, objChao) || place_meeting(x, y+1, objCaixa) || place_meeting(x, y+1, objBarril) ||
    place_meeting(x, y+1, objCarroca) || place_meeting(x, y+1, objPlataformaSuspensa) || 
    place_meeting(x, y+1, objPlataforma) || place_meeting(x, y+1, objPlataformaDireita))
{
    canJump = true;
}

//pulo - verifica se personagem está em cima de algum objeto
if (canJump)
{
    vsp = key_jump * -jumpspeed
}

//Colisao Horizontal
if (place_meeting(x+hsp,y,objCaixa) || place_meeting(x+hsp,y,objBarril) || place_meeting(x+hsp,y,objCarroca) || 
    place_meeting(x+hsp,y,objPlataformaSuspensa) || place_meeting(x+hsp,y,objPoco) || 
    place_meeting(x+hsp,y,objPlataforma) || place_meeting(x+hsp,y,objPlataformaDireita))
{
    while(!place_meeting(x+sign(hsp),y,objCaixa) || !place_meeting(x+sign(hsp),y,objBarril) || 
            !place_meeting(x+sign(hsp),y,objCarroca) || !place_meeting(x+sign(hsp),y,objPlataformaSuspensa) || 
            !place_meeting(x+sign(hsp),y,objPoco) || !place_meeting(x+sign(hsp),y,objPlataforma) 
            || !place_meeting(x+sign(hsp),y,objPlataformaDireita))
    {
        x += sign(hsp);
    }
    hsp = 0;
}
x += hsp;

//Vertical Collision
if (place_meeting(x,y+vsp,objChao))
{
    while(!place_meeting(x,y+sign(vsp),objChao))
    {
        y += sign(vsp);
    }
    vsp = 0;
}
y += vsp;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
