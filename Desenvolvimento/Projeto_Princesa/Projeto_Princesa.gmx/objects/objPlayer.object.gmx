<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprPlayerIdle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Inicializar variáveis
grav = 1;
hsp = 0;
vsp = 0;
jumpspeed = 12;
movespeed = 5;

image_speed = 0.5;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movimentação e colisão horizontal
//verifica se botões de movimentação foram pressionados
key_right = keyboard_check(vk_right);
key_left = -keyboard_check(vk_left);

move = key_left + key_right;
hsp = move * movespeed;

if(hsp != 0) 
{
    colisao_horizontal();
}
else
{
    sprite_index = sprPlayerIdle;
}

//adiciona o que sobrar da velocidade horizontal - calculada em colisao_horizontal()
x += hsp;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Pulo e colisão vertical

/*
* adiciona o valor da gravidade - definida no código de criação do 
* objeto - ao valor da velocidade vertical
*/
if (vsp &lt; 12)
{
    vsp += grav;
}

//verifica se botão de pulo foi pressionado
key_jump = keyboard_check_pressed(vk_space);
if(key_jump)
{
    /*
    * place_meeting verifica se personagem irá se encontrar com o 
    * objeto definido no último parâmetro da função
    */
    //previne pulos quando já no ar
    if (place_meeting(x, y+1, objChao)) { pulo() }
    else if (place_meeting(x, y+1, objCaixa)) { pulo() }
    else if (place_meeting(x, y+1, objBarril)) { pulo() }
    else if (place_meeting(x, y+1, objCarroca)) { pulo() }
    else if (place_meeting(x, y+1, objPlataformaSuspensa)) { pulo() }
}

//verifica se há colisão vertical
if(vsp != 0)
{
    colisao_vertical();
}
else
{
    sprite_index = sprPlayerIdle;
}
/*
* adiciona o que sobrar da velocidade vertical - calculada em 
* colisao_vertical()
*/
y += vsp;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Colisão com morte
if(place_meeting(x,y,objGuarda)) { room_restart(); }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Objetivo
if(x &gt;= 1472) { room_restart(); }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
